name: Gitea Oauth2 Setup Component Build

on:
  pull_request:
    branches:
      - main
      - "release/v*"
    paths:
      - "gitea-oauth2-setup/**/*"
      - ".github/workflows/gitea-oauth2-setup*"
  push:
    branches:
      - main
      - "release/v*"
    paths:
      - "gitea-oauth2-setup/**/*"
      - ".github/workflows/gitea-oauth2-setup*"


env:
  GITHUB_TOKEN: ${{ secrets.PATNAME }}


jobs:

  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: ./gitea-oauth2-setup/Dockerfile
          format: tty
          config: ./.hadolint.yml


  create-release-tag:
    if: github.ref == 'refs/heads/main' # only in main branch
    needs: quality-checks
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - name: CheckOut
        uses: actions/checkout@v2

      - name: Generate a release tag
        uses: intelygenz/monorepo-tagger-action@v1.0
        id: release_tag
        with:
          mode: 'component'
          type: 'final'
          component-prefix: "gitea-oauth2-setup-"


  create-fix-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    needs: quality-checks
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - name: CheckOutversion
        uses: actions/checkout@v2

      - uses: chrisdickinson/setup-yq@latest
      - name: Get component versions
        id: component_version
        run: |
          TAG=`yq r helm/kdl-server/values.yaml 'giteaOauth2Setup.image.tag'`
          echo ::set-output name=TAG::${TAG}
          echo Component version in release branch is ${TAG}

      - name: Generate a fix
        uses: intelygenz/monorepo-tagger-action@v1.0
        id: fix_tag
        with:
          mode: 'component'
          type: 'fix'
          component-prefix: "gitea-oauth2-setup-"
          current-tag: ${{ steps.component_version.outputs.TAG }}


  build-release:
    if: |
      always() &&
      (needs.create-release-tag.outputs.tag || needs.create-fix-tag.outputs.tag)
    needs: [create-release-tag, create-fix-tag]
    runs-on: ubuntu-latest
    outputs:
      component-version: ${{ steps.set_tag.outputs.VERSION }}
    steps:
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v1

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1

      #- name: Login to DockerHub Registry
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Store tag
        id: set_tag
        run: |
          VERSION=${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}
          echo Tag set to ${VERSION}
          echo ::set-output name=VERSION::${VERSION}

      #- name: Push to Docker Hub
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: ./gitea-oauth2-setup
      #    file: ./gitea-oauth2-setup/Dockerfile
      #    platforms: linux/amd64
      #    push: true
      #    tags: |
      #      konstellation/gitea-oauth2-setup:${{ steps.version.outputs.tag }}
      #      konstellation/gitea-oauth2-setup:latest

      - name: CheckOut
        uses: actions/checkout@v2
        with:
          ref: ${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}

      #- name: Changelog
      #  uses: ./.github/actions/git-chglog
      #  id: Changelog
      #  with:
      #    path: gitea-oauth2-setup
      #    tag: ${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@latest
      #  with:
      #    tag_name: ${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}
      #    release_name: Release ${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}
      #    body: |
      #      ${{ steps.Changelog.outputs.changelog }}
      #    draft: false
      #    prerelease: false


  chart-update-values:
    if: always() && needs.build-release.outputs.component-version
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: chrisdickinson/setup-yq@latest
      - name: Replace component versions
        run: |
          # set app version and chart version for kdl
          yq w -i helm/kdl-server/values.yaml 'giteaOauth2Setup.image.tag' ${{ needs.build-release.outputs.component-version }}
          echo 'component version' ${{ needs.build-release.outputs.component-version }}

      - name: Commit files
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -m "Update gitea-oauth2-setup component to ${{ needs.build-release.outputs.component-version }} [skip-ci]" -a
          git push
