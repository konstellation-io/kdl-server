// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/konstellation-io/kdl-server/app/api/entity"
)

type AddMembersInput struct {
	ProjectID string   `json:"projectId"`
	UserIds   []string `json:"userIds"`
}

type AddUserInput struct {
	Email       string             `json:"email"`
	Username    string             `json:"username"`
	Password    string             `json:"password"`
	AccessLevel entity.AccessLevel `json:"accessLevel"`
}

type APITokenInput struct {
	UserID string  `json:"userId"`
	Name   *string `json:"name"`
}

type CreateProjectInput struct {
	Name        string           `json:"name"`
	Description string           `json:"description"`
	Repository  *RepositoryInput `json:"repository"`
}

type ExternalRepository struct {
	URL      string `json:"url"`
	Username string `json:"username"`
	Token    string `json:"token"`
}

type InternalRepository struct {
	Name string `json:"name"`
}

type QualityProjectDesc struct {
	Quality int `json:"quality"`
}

type RemoveAPITokenInput struct {
	APITokenID string `json:"apiTokenId"`
}

type RemoveMemberInput struct {
	ProjectID string `json:"projectId"`
	UserID    string `json:"userId"`
}

type RemoveUsersInput struct {
	UserIds []string `json:"userIds"`
}

type RepositoryInput struct {
	Type     entity.RepositoryType `json:"type"`
	External *ExternalRepository   `json:"external"`
	Internal *InternalRepository   `json:"internal"`
}

type SetActiveUserToolsInput struct {
	Active bool `json:"active"`
}

type SetBoolFieldInput struct {
	ID    string `json:"id"`
	Value bool   `json:"value"`
}

type SetKGStarredInput struct {
	ProjectID string `json:"projectId"`
	KgItemID  string `json:"kgItemId"`
	Starred   bool   `json:"starred"`
}

type SetKGStarredRes struct {
	KgItemID string `json:"kgItemId"`
	Starred  bool   `json:"starred"`
}

type UpdateAccessLevelInput struct {
	UserIds     []string           `json:"userIds"`
	AccessLevel entity.AccessLevel `json:"accessLevel"`
}

type UpdateMemberInput struct {
	ProjectID   string             `json:"projectId"`
	UserID      string             `json:"userId"`
	AccessLevel entity.AccessLevel `json:"accessLevel"`
}

type UpdateProjectInput struct {
	ID          string                        `json:"id"`
	Name        *string                       `json:"name"`
	Description *string                       `json:"description"`
	Repository  *UpdateProjectRepositoryInput `json:"repository"`
}

type UpdateProjectRepositoryInput struct {
	URL string `json:"url"`
}
