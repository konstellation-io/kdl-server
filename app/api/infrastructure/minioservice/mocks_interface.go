// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package minioservice is a generated GoMock package.
package minioservice

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMinioService is a mock of MinioService interface.
type MockMinioService struct {
	ctrl     *gomock.Controller
	recorder *MockMinioServiceMockRecorder
}

// MockMinioServiceMockRecorder is the mock recorder for MockMinioService.
type MockMinioServiceMockRecorder struct {
	mock *MockMinioService
}

// NewMockMinioService creates a new mock instance.
func NewMockMinioService(ctrl *gomock.Controller) *MockMinioService {
	mock := &MockMinioService{ctrl: ctrl}
	mock.recorder = &MockMinioServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMinioService) EXPECT() *MockMinioServiceMockRecorder {
	return m.recorder
}

// CreateBucket mocks base method.
func (m *MockMinioService) CreateBucket(ctx context.Context, bucketName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBucket", ctx, bucketName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBucket indicates an expected call of CreateBucket.
func (mr *MockMinioServiceMockRecorder) CreateBucket(ctx, bucketName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBucket", reflect.TypeOf((*MockMinioService)(nil).CreateBucket), ctx, bucketName)
}

// CreateProjectDirs mocks base method.
func (m *MockMinioService) CreateProjectDirs(ctx context.Context, bucketName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProjectDirs", ctx, bucketName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateProjectDirs indicates an expected call of CreateProjectDirs.
func (mr *MockMinioServiceMockRecorder) CreateProjectDirs(ctx, bucketName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProjectDirs", reflect.TypeOf((*MockMinioService)(nil).CreateProjectDirs), ctx, bucketName)
}

// DeleteBucket mocks base method.
func (m *MockMinioService) DeleteBucket(ctx context.Context, bucketName string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBucket", ctx, bucketName)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBucket indicates an expected call of DeleteBucket.
func (mr *MockMinioServiceMockRecorder) DeleteBucket(ctx, bucketName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBucket", reflect.TypeOf((*MockMinioService)(nil).DeleteBucket), ctx, bucketName)
}
