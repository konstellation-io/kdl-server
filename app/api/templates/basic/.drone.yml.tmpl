kind: secret
name: minio-key-id
get:
  path: {{ .ProjectID }}-mlflow-secret
  name: AWS_ACCESS_KEY_ID

---

kind: secret
name: minio-secret
get:
  path: {{ .ProjectID }}-mlflow-secret
  name: AWS_SECRET_ACCESS_KEY

---

kind: pipeline
type: kubernetes
name: example-pipeline

trigger:
  ref:
    - refs/tags/run-example-*

environment:
  PYTHONPATH: /drone/src/lab
  PATH_CONFIG: /drone/src/lab/processes/config.ini
  MINIO_DATA_FOLDER: /shared-storage/{{ .ProjectID }}/data
  MLFLOW_URL: {{ .MLFlowURL }}
  MLFLOW_S3_ENDPOINT_URL: {{ .MinioURL }}
  USER: ${DRONE_COMMIT_AUTHOR}

steps:
  - name: prepare-data
    image: terminus7/sci-toolkit-runner:1.1.2
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - python3 lab/processes/prepare_data/main.py
    volumes:
      - name: shared-storage
        path: /shared-storage

  - name: train-standard-classifiers
    image: terminus7/sci-toolkit-runner:1.1.2
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - python3 lab/processes/train_standard_classifiers/main.py
    volumes:
      - name: shared-storage
        path: /shared-storage

  - name: train-pytorch-neural-net
    image: terminus7/sci-toolkit-runner:1.1.2
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - python3 lab/processes/train_dnn_pytorch/main.py
    volumes:
      - name: shared-storage
        path: /shared-storage

volumes:
  - name: shared-storage
    claim:
      name: {{ .SharedPVC }}
