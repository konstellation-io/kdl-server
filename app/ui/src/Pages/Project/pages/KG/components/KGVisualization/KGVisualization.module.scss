@import 'Styles/variables';
@import 'Styles/mixins';
@import 'Styles/colors';
@import 'Styles/shadows';

$tooltipWidth: 300px;

.container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  transition: top ease 0.5s, left ease 0.5s;
}

.label1,
.tick,
.axisG,
.label4 {
  fill-opacity: 1;
}

.svg,
.canvas {
  position: absolute;
  top: 0;
  left: 0;
}

.sectionAndNamesG {
  opacity: 1;
}
.sectionAndNamesGuide {
  opacity: 1;
}

.outerCircle {
  fill-opacity: 0;
  stroke: palette(lowlight, 900);
  stroke-width: 6;
}

.innerCircle {
  fill: palette(base, 900);
  fill-opacity: 0.8;
  stroke: palette(lowlight, 900);
  stroke-width: 2;
}

.innerCircleText {
  @include font-small;
  font-size: 16px;
  line-height: 20px;
  color: font-color(light);
  text-align: center;

  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.sectionsWrapper {
  opacity: 1;
}

.axis {
  font-weight: 600;
  fill: font-color(regular);
}

.grid {
  stroke: palette(lowlight, 700);
}

.tooltip {
  position: absolute;
  width: 50 * $grid-unit;
  z-index: 999;
  pointer-events: none;

  opacity: 0;
  transition: top ease 0.4s, left ease 0.4s, opacity ease 0.4s;

  &.open {
    opacity: 1;
    // pointer-events: all;
  }
}

.tooltipContent {
  width: 100%;

  .title {
    @include font-subheader;
    color: font-color(light);

    margin-bottom: 2 * $grid-unit;
  }
  .catAndScore {
    @include font-small;
    color: font-color(lowlight);

    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  &:before {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    bottom: -4 * $grid-unit;
    left: 0;
  }
}

.tooltipWrapper {
  @include shadow(3);

  background-color: palette(base);
  position: absolute;
  padding: 2 * $grid-unit;
  bottom: 2.5 * $grid-unit;
  left: calc(-50% - 4px);
  width: 50 * $grid-unit;
  display: flex;
  align-items: center;

  &:after {
    content: '';
    width: 0;
    height: 0;
    border: solid palette(base) 10px;
    border-left-color: transparent;
    border-top-color: transparent;
    position: absolute;
    left: calc(50% - 6px);
    bottom: -2 * $grid-unit + 6px;
    transform: rotateZ(45deg);
  }
}

$state-to-color: (
  good: palette(success),
  notSoBad: palette(feedback),
  notGood: palette(alert),
  bad: palette(error),
);

@each $class, $color in $state-to-color {
  .scoreContainer.#{$class} {
    .value {
      @include font-small;
      color: $color;
      text-align: end;
    }
    .bars {
      position: relative;
      width: 6.5 * $grid-unit;
      height: 2px;

      .barBg {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 100%;
        background-color: palette(base, 300);
      }
      .barValue {
        position: absolute;
        right: 0;
        bottom: 0;
        background-color: $color;
        height: 100%;
      }
    }

    &.inline {
      display: flex;

      align-items: center;

      .value {
        width: 5 * $grid-unit;

        text-align: start;
      }
      .bars {
        height: 0.5 * $grid-unit;
        width: 8 * $grid-unit;

        .barValue {
          left: 0;
        }
      }
    }
  }
}

.panels {
  position: fixed;
  right: 0;
  height: calc(100% - 40px);
  display: flex;
  flex-direction: row;
  z-index: 5;

  .listPanel {
    height: 100%;
    width: 25vw;
    min-width: 44 * $grid-unit;
    max-width: 60 * $grid-unit;
  }

  .detailsPanel {
    height: 100%;

    width: 37.5vw;
    max-width: 0;
    min-width: 0;
    overflow: hidden;

    transition: max-width ease 0.4s, min-width ease 0.4s;

    &.opened {
      min-width: 44 * $grid-unit;
      max-width: 90 * $grid-unit;
    }
  }
}

.shield {
  position: fixed;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1 !important;

  &.show {
    @include shield;
    pointer-events: all;
    cursor: pointer;
  }
}

.staticTooltip {
  position: absolute;
  top: 3 * $grid-unit;
  left: 3 * $grid-unit;
  z-index: 1;
}
