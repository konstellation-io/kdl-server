global:
  serverName: "local-server"
  domain: {{ requiredEnv "DOMAIN" | quote }}

  ingress:
    tls:
      enabled: {{ requiredEnv "ENABLE_TLS" }}
      secretName: {{ requiredEnv "DOMAIN" }}-tls-secret

image:
  repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-server
  tag: latest
  pullPolicy: Always

env:
  KDL_ADMIN_EMAIL: "test@test.com"
  KDL_ADMIN_USERNAME: {{ requiredEnv "KEYCLOAK_ADMIN_USER" | quote }}
  KDL_SERVER_MONGODB_URI: "mongodb://kdl:123456@mongodb:27017/kdl?authSource=kdl&authMechanism=SCRAM-SHA-256"
  KDL_SERVER_PORT: "8080"
  MINIO_ACCESS_KEY: "minio"
  MINIO_ENDPOINT: "minio:9000"
  MINIO_SECRET_KEY: "minio123"
  SERVER_URL: https://kdlapp.{{ requiredEnv "DOMAIN" }}

readyChecker:
  enabled: false

service:
  type: ClusterIP
  port: 80

# -- Keycloak subchart deployment
# </br> Ref: https://github.com/konstellation-io/helm-charts/blob/konstellation-base-1.0.2/charts/konstellation-base/values.yaml
keycloak:
  enabled: true

  fullnameOverride: keycloak

  image:
    repository: keycloak/keycloak
    tag: "26.0"

  service:
    healthPath: /realms/master
    targetPort: 8080

  ingress:
    enabled: true
    className: public
    annotations:
      nginx.org/proxy-buffer-size: "128k"
      nginx.org/proxy-buffers: "8 256k"
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
    hosts:
    - host: keycloak.{{ requiredEnv "DOMAIN" }}
      paths:
      - path: /
        pathType: ImplementationSpecific
    tls:
      - secretName: keycloak-kdl-tls
        hosts:
        - keycloak.{{ requiredEnv "DOMAIN" }}

  serviceAccount:
    create: true

  livenessProbe:
    enabled: false

  readinessProbe:
    enabled: false
    httpGet:
      path: /realms/master

  command:
  - "/opt/keycloak/bin/kc.sh"
  - "start"
  - "--verbose"
  - "--import-realm"

  env:
    KC_DB_PASSWORD: keycloak
    KC_DB_URL: jdbc:postgresql://postgresql:5432/keycloak
    KC_DB_USERNAME: keycloak
    KC_DB: postgres
    KC_HEALTH_ENABLED: true
    KC_HOSTNAME: keycloak.{{ requiredEnv "DOMAIN" }}
    KC_HTTP_ENABLED: true
    KC_METRICS_ENABLED: true
    KC_PROXY_HEADERS: xforwarded
    KC_BOOTSTRAP_ADMIN_USERNAME: {{ requiredEnv "KEYCLOAK_ADMIN_USER" | quote }}
    KC_BOOTSTRAP_ADMIN_PASSWORD: {{ requiredEnv "KEYCLOAK_ADMIN_PASSWORD" | quote }}
    KC_PROXY: edge

  volumes:
    - name: keycloak-initial-realm
      configMap:
        name: keycloak-initial-realm

  volumeMounts:
    - name: keycloak-initial-realm
      mountPath: /opt/keycloak/data/import/initial-realm.json
      subPath: initial-realm.json
      readOnly: true

knowledgeGalaxy:
  enabled: false

  image:
    repository: {{ requiredEnv "KNOWLEDGE_GALAXY_IMAGE_REPOSITORY" | quote }}
    tag: {{ env "KNOWLEDGE_GALAXY_IMAGE_TAG" | quote }}

# -- MinIO subchart deployment
# </br> Ref: https://github.com/minio/minio/blob/RELEASE.2021-10-13T00-23-17Z/helm/minio/values.yaml
minio:
  enabled: true

  fullnameOverride: minio
  nameOverride: minio

  mode: standalone

  ingress:
    enabled: true
    ingressClassName: public
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
    path: /
    hosts:
      - minio.{{ requiredEnv "DOMAIN" }}
    tls:
      - secretName: minio-tls
        hosts:
        - minio.{{ requiredEnv "DOMAIN" }}

  consoleIngress:
    enabled: true
    ingressClassName: public
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
    path: /
    hosts:
      - minio-console.{{ requiredEnv "DOMAIN" }}
    tls:
      - secretName: minio-console-tls
        hosts:
        - minio-console.{{ requiredEnv "DOMAIN" }}

  rootUser: minio
  rootPassword: minio123

  persistence:
    enabled: true
    storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}
    existingClaim: "kdl-local-claim"
    size: 1Gi
    accessMode: ReadWriteMany

  resources:
    requests:
      memory: 1Gi

# -- MongoDB subchart deployment
# </br> Ref: https://github.com/bitnami/charts/blob/main/bitnami/mongodb/values.yaml
mongodb:
  enabled: true

  fullnameOverride: mongodb
  nameOverride: mongodb

  image:
    tag: 7.0.15

  architecture: standalone

  auth:
    rootUser: admin
    rootPassword: "123456"
    usernames:
    - kdl
    passwords:
    - 123456
    databases:
    - kdl

  persistence:
    enabled: true
    storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

# -- OAuth2-Proxy subchart deployment
# </br> Ref: https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml
oauth2proxy:
  enabled: true

  ingress:
    enabled: true
    className: public
    path: /
    pathType: ImplementationSpecific
    hosts:
      - kdlapp.{{ requiredEnv "DOMAIN" }}

  httpScheme: http

  image:
    tag: "v7.7.1-amd64"

  config:
    clientID: proxy
    clientSecret: proxy654321
    cookieSecret: mycookiesecret16

    configFile: |-
      upstreams=["http://kdl-local-server:80/", "http://127.0.0.1:9000/mlflow/", "http://127.0.0.1:9000/filebrowser/", "http://127.0.0.1:9000/kg/"]
      cookie_domains=["kdlapp.{{ requiredEnv "DOMAIN" }}", "keycloak.{{ requiredEnv "DOMAIN" }}"]
      cookie_samesite="lax"
      cookie_secure=true
      email_domains="*"
      errors_to_info_log=true
      http_address="https://kdlapp.{{ requiredEnv "DOMAIN" }}/"
      oidc_issuer_url="https://keycloak.{{ requiredEnv "DOMAIN" }}/realms/kdl"
      pass_user_headers=true
      provider="keycloak-oidc"
      redirect_url="https://kdlapp.{{ requiredEnv "DOMAIN" }}/oauth2/callback"
      set_xauthrequest=true
      skip_auth_routes="/config.json"
      skip_provider_button=true
      ssl_insecure_skip_verify=true
      whitelist_domains=["kdlapp.{{ requiredEnv "DOMAIN" }}"]

  extraContainers:
    - name: project-proxy
      image: nginx:alpine
      ports:
        - containerPort: 9000
      volumeMounts:
        - name: project-proxy-nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf

  extraVolumes:
    - name: project-proxy-nginx-config
      configMap:
        name: project-proxy-nginx-config

# -- PostgreSQL subchart deployment
# </br> Ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  enabled: true

  fullnameOverride: postgresql
  nameOverride: postgresql

  replicaCount: 1

  auth:
    postgresPassword: postgres
    username: keycloak
    password: keycloak
    database: "keycloak"

  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

projectOperator:
  enabled: true

  image:
    repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/project-operator
    tag: latest
    pullPolicy: Always

  mlflow:
    image:
      repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/mlflow
      tag: latest
      pullPolicy: Always
    volume:
      storageClassName: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}
    ingress:
      className: "public"

  filebrowser:
    image:
      repository: filebrowser/filebrowser
      pullPolicy: Always
      tag: v2

sharedVolume:
  enabled: true

  name: kdl-local

  storageClassName: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

userToolsOperator:
  enabled: true

  image:
    repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/user-tools-operator
    tag: latest
    pullPolicy: Always

  storage:
    storageClassName: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

  repoCloner:
    image:
      repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/repo-cloner
      tag: latest
      pullPolicy: Always

  vscode:
    enabled: false

    image:
      repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/vscode
      tag: latest
      pullPolicy: Always

  ingress:
    className: "public"

  kubeconfig:
    enabled: {{ requiredEnv "KUBECONFIG_ENABLED" }}
    externalServerUrl: {{ env "EXTERNAL_SERVER_URL" | quote }}
