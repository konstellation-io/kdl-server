global:
  serverName: "local-server"
  domain: {{ requiredEnv "DOMAIN" | quote }}

  ingress:
    tls:
      enabled: true
      secretName: {{ requiredEnv "DOMAIN" }}-tls-secret

image:
  repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-server
  tag: latest
  pullPolicy: Always

env:
  KDL_SERVER_MONGODB_URI: "mongodb://{{ .Values.mongodb_user }}:{{ .Values.mongodb_password }}@mongodb-svc.mongodb:27017/{{ .Values.mongodb_user }}?authSource={{ .Values.mongodb_user }}&authMechanism=SCRAM-SHA-256"
  KDL_SERVER_PORT: "8080"
  KUBECONFIG_DOWNLOAD_ENABLED: {{ requiredEnv "KUBECONFIG_ENABLED" }}
  KUBECONFIG_EXTERNAL_SERVER_URL: {{ env "EXTERNAL_SERVER_URL" | quote }}
  MINIO_ACCESS_KEY: "{{ .Values.minio_access_key }}"
  MINIO_ENDPOINT: "minio:9000"
  MINIO_SECRET_KEY: "{{ .Values.minio_secret_key }}"
  SERVER_URL: https://kdlapp.{{ requiredEnv "DOMAIN" }}

readyChecker:
  enabled: true
  services:
  - name: mongodb-svc.mongodb
    port: 27017
  - name: keycloak
    port: 80

service:
  type: ClusterIP
  port: 80

# -- Keycloak subchart deployment
# </br> Ref: https://github.com/konstellation-io/helm-charts/blob/konstellation-base-1.0.2/charts/konstellation-base/values.yaml
keycloak:
  enabled: true

  fullnameOverride: keycloak

  image:
    repository: keycloak/keycloak
    tag: "26.0"

  service:
    healthPath: /realms/master
    targetPort: 8080

  ingress:
    enabled: true
    className: public
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
    hosts:
    - host: keycloak.{{ requiredEnv "DOMAIN" }}
      paths:
      - path: /
        pathType: ImplementationSpecific
    tls:
      - secretName: keycloak-kdl-tls
        hosts:
        - keycloak.{{ requiredEnv "DOMAIN" }}

  serviceAccount:
    create: true

  livenessProbe:
    enabled: false

  readinessProbe:
    enabled: false
    httpGet:
      path: /realms/master

  command:
  - "/opt/keycloak/bin/kc.sh"
  - "start"
  - "--verbose"
  - "--import-realm"

  env:
    KC_BOOTSTRAP_ADMIN_PASSWORD: {{ .Values.keycloak_admin_password | quote }}
    KC_BOOTSTRAP_ADMIN_USERNAME: {{ .Values.keycloak_admin_user | quote }}
    KC_DB_PASSWORD: keycloak
    KC_DB_URL: jdbc:postgresql://postgresql:5432/keycloak
    KC_DB_USERNAME: keycloak
    KC_DB: postgres
    KC_HEALTH_ENABLED: true
    KC_HOSTNAME: keycloak.{{ requiredEnv "DOMAIN" }}
    KC_HTTP_ENABLED: true
    KC_METRICS_ENABLED: true
    KC_PROXY_HEADERS: xforwarded
    KC_PROXY: edge

  volumes:
    - name: keycloak-initial-realm
      configMap:
        name: keycloak-initial-realm

  volumeMounts:
    - name: keycloak-initial-realm
      mountPath: /opt/keycloak/data/import/initial-realm.json
      subPath: initial-realm.json
      readOnly: true

knowledgeGalaxy:
  enabled: false

  image:
    repository: {{ requiredEnv "KNOWLEDGE_GALAXY_IMAGE_REPOSITORY" | quote }}
    tag: {{ env "KNOWLEDGE_GALAXY_IMAGE_TAG" | quote }}

# -- MinIO subchart deployment
# </br> Ref: https://github.com/minio/minio/blob/RELEASE.2021-10-13T00-23-17Z/helm/minio/values.yaml
minio:
  enabled: true

  fullnameOverride: minio
  nameOverride: minio

  mode: standalone

  ingress:
    enabled: false
    ingressClassName: public
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
      nginx.ingress.kubernetes.io/proxy-body-size: "4096m"
    path: /
    hosts:
      - minio.{{ requiredEnv "DOMAIN" }}
    tls:
      - secretName: minio-tls
        hosts:
        - minio.{{ requiredEnv "DOMAIN" }}

  consoleIngress:
    enabled: true
    ingressClassName: public
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
      nginx.ingress.kubernetes.io/proxy-body-size: "4096m"
    path: /
    hosts:
      - minio-console.{{ requiredEnv "DOMAIN" }}
    tls:
      - secretName: minio-console-tls
        hosts:
        - minio-console.{{ requiredEnv "DOMAIN" }}

  rootUser: minio
  rootPassword: minio123

  persistence:
    enabled: true
    storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}
    existingClaim: "shared-volume"
    size: 1Gi
    accessMode: ReadWriteMany

  resources:
    requests:
      memory: 1Gi

# -- MongoDB subchart deployment
# </br> Ref: https://github.com/bitnami/charts/blob/main/bitnami/mongodb/values.yaml
mongodb:
  enabled: false

# -- OAuth2-Proxy subchart deployment
# </br> Ref: https://github.com/oauth2-proxy/manifests/blob/main/helm/oauth2-proxy/values.yaml
oauth2proxy:
  enabled: true

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-clusterissuer
    className: public
    path: /
    pathType: ImplementationSpecific
    hosts:
      - kdlapp.{{ requiredEnv "DOMAIN" }}

  httpScheme: http

  image:
    tag: "v7.7.1"

  config:
    clientID: proxy
    clientSecret: proxy654321
    cookieSecret: mycookiesecret16

    configFile: |-
      cookie_csrf_per_request=true
      cookie_domains=["kdlapp.{{ requiredEnv "DOMAIN" }}", "keycloak.{{ requiredEnv "DOMAIN" }}"]
      cookie_samesite="strict"
      cookie_secure=false
      email_domains="*"
      errors_to_info_log=true
      http_address="https://kdlapp.{{ requiredEnv "DOMAIN" }}/"
      oidc_issuer_url="https://keycloak.{{ requiredEnv "DOMAIN" }}/realms/kdl"
      pass_user_headers=true
      provider="keycloak-oidc"
      redirect_url="https://kdlapp.{{ requiredEnv "DOMAIN" }}/oauth2/callback"
      set_authorization_header=true
      set_xauthrequest=true
      silence_ping_logging=true
      skip_auth_routes="/config.json"
      skip_provider_button=true
      ssl_insecure_skip_verify=true
      upstreams=["http://kdl-local-server:80/", "http://127.0.0.1:9000/mlflow/", "http://127.0.0.1:9000/filebrowser/", "http://127.0.0.1:9000/kg/"]
      whitelist_domains=["kdlapp.{{ requiredEnv "DOMAIN" }}"]

  extraContainers:
    - name: project-proxy
      image: nginx:alpine
      ports:
        - containerPort: 9000
      volumeMounts:
        - name: project-proxy-nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf

  extraVolumes:
    - name: project-proxy-nginx-config
      configMap:
        name: project-proxy-nginx-config

# -- PostgreSQL subchart deployment
# </br> Ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  enabled: true

  fullnameOverride: postgresql
  nameOverride: postgresql

  replicaCount: 1

  auth:
    database: keycloak
    password: keycloak
    postgresPassword: postgres
    username: keycloak

  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

projectOperator:
  enabled: true

  image:
    repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-project-operator
    pullPolicy: Always
    tag: latest

  templateCustomResource: |
    apiVersion: kdl.konstellation.io/v1
    kind: KDLProject
    metadata:
      name: kdlproject-to-be-replaced
      namespace: kdlproject-to-be-replaced
    spec:
      domain: {{ requiredEnv "DOMAIN" | quote }}
      projectId: kdlproject-id-to-be-replaced
      mlflow:
        image:
          repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-mlflow
          pullPolicy: IfNotPresent
          tag: latest

        ingress:
          enabled: true
          tls:
            enabled: true
          className: public
          annotations:
            cert-manager.io/cluster-issuer: selfsigned-clusterissuer
            nginx.ingress.kubernetes.io/proxy-body-size: "4096m"

        persistentVolume:
          enabled: true
          size: "1Gi"
          accessModes:
            - ReadWriteOnce
          storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

        env:
          AWS_ACCESS_KEY_ID: "{{ .Values.minio_access_key }}"
          AWS_SECRET_ACCESS_KEY: "{{ .Values.minio_secret_key }}"
          MLFLOW_S3_ENDPOINT_URL: "http://minio.kdl:9000"
          MLFLOW_TRACKING_URI: "sqlite:///database.db"

      filebrowser:
        image:
          repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-filebrowser
          pullPolicy: IfNotPresent
          tag: latest

        podSecurityContext:
          fsGroup: 1000

        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN

        env:
          AWS_S3_ACCESS_KEY_ID: "minio"
          AWS_S3_MOUNT: "/srv"
          AWS_S3_SECRET_ACCESS_KEY: "minio123"
          AWS_S3_URL: "http://minio:9000"
          FB_ADDRESS: "0.0.0.0"
          FB_DATABASE: /database.db
          FB_LOG: stdout
          FB_ROOT: /srv
          S3FS_ARGS: >-
            -o use_path_request_style
            -o use_cache=/cache
            -o ensure_diskfree=2048
            -o max_stat_cache_size=100000
            -o stat_cache_expire=300
            -o enable_noobj_cache
            -o dbglevel=warn
            -o multipart_size=52
            -o parallel_count=32
            -o max_dirty_data=512
            -o multireq_max=30
            -o complement_stat
            -o notsup_compat_dir
            -o enable_content_md5
            -o ro

        volumes:
          - name: cache-volume
            emptyDir: {}
          - name: fuse-device
            hostPath:
              path: /dev/fuse
              type: CharDevice

        volumeMounts:
          - name: cache-volume
            mountPath: /cache
          - name: fuse-device
            mountPath: /dev/fuse

sharedVolume:
  enabled: true

  name: shared-volume
  storageClassName: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

userToolsOperator:
  enabled: true

  image:
    repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-user-tools-operator
    tag: latest
    pullPolicy: Always

  storage:
    storageClassName: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

  templateCustomResource: |
    apiVersion: kdl.konstellation.io/v1
    kind: KDLUserTools
    metadata:
      name: kdlusertools-to-be-replaced
      namespace: kdlusertools-to-be-replaced
    spec:
      username: replaced-by-kdl-api
      usernameSlug: replaced-by-kdl-api

      sharedVolume:
        enabled: false

      podLabels: {}

      persistentVolume:
        enabled: true
        size: "1Gi"
        accessModes:
          - ReadWriteOnce
        storageClass: {{ requiredEnv "STORAGE_CLASS_NAME" | quote }}

      kubeconfig:
        enabled: {{ requiredEnv "KUBECONFIG_ENABLED" }}
        externalServerUrl: {{ env "EXTERNAL_SERVER_URL" | quote }}

      repoCloner:
        image:
          repository: {{ requiredEnv "IMAGE_REGISTRY" }}/konstellation/kdl-repo-cloner
          pullPolicy: IfNotPresent
          tag: "latest"

        env:
          KDL_SERVER_MONGODB_URI: "mongodb://{{ .Values.mongodb_user }}:{{ .Values.mongodb_password }}@mongodb-svc.mongodb:27017/{{ .Values.mongodb_user }}?authSource={{ .Values.mongodb_user }}&authMechanism=SCRAM-SHA-256"

      vscodeRuntime:
        image:
          repository: konstellation/kdl-py
          pullPolicy: IfNotPresent
          tag: "3.9"

        env:
          AWS_ACCESS_KEY: "{{ .Values.minio_access_key }}"
          AWS_SECRET_KEY: "{{ .Values.minio_secret_key }}"
          MINIO_ENDPOINT: "minio:9000"

      nodeSelector: {}
      tolerations: []
      affinity: {}
