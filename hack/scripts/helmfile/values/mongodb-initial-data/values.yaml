resources:
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: mongodb-initial-data
  spec:
    template:
      spec:
        initContainers:
          - name: wait-for-mongodb
            image: busybox
            command: ["/bin/sh", "-c"]
            args:
              - |
                until nc -zv mongodb 27017 > /dev/null; do
                  sleep 10
                done
                echo "MongoDB is up and running!"
        containers:
          - name: mongodb-insert
            image: docker.io/bitnami/mongodb:7.0.15
            command: ["/bin/sh", "-c"]
            args:
              - |
                mongosh "$MONGODB_URI" --eval '
                db.runtimes.insertOne({
                  "name": "Python 3.9 CUDA",
                  "desc": "Rumtime with Python 3.9 for GPU workloads",
                  "labels": [
                    "Python 3.9",
                    "Ubuntu 20.0.4",
                    "GPU",
                    "CUDA 10.2",
                    "CUDNN 7"
                  ],
                  "docker_image": "konstellation/kdl-py",
                  "docker_tag": "3.9-cuda10.2-cudnn7"
                });

                db.capabilities.insertOne({
                  "_id": "test_initial_data",
                  "name": "test_initial_data",
                  "node_selectors": {
                    "kubernetes.io/os": "linux"
                  },
                  "tolerations": [],
                  "affinities": {}
                });
                '
            env:
              - name: MONGODB_URI
                valueFrom:
                  secretKeyRef:
                    name: mongodb-string-uri
                    key: mongodb-string-uri
        restartPolicy: Never
    backoffLimit: 1
