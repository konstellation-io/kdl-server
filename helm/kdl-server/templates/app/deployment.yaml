apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdl-server
spec:
  selector:
    matchLabels:
      app: kdl-server
  template:
    metadata:
      labels:
        app: kdl-server
      annotations:
        checksum/kdl-config: {{ include (print $.Template.BasePath "/app/configmap.yaml") . | sha256sum }}
        checksum/kdl-secret: {{ include (print $.Template.BasePath "/app/secret.yaml") . | sha256sum }}
        checksum/oauth2-config: {{ include (print $.Template.BasePath "/app/oauth2-proxy-configmap.yaml") . | sha256sum }}
        checksum/oauth2-secret: {{ include (print $.Template.BasePath "/app/oauth2-secret.yaml") . | sha256sum }}
        checksum/project-proxy-config: {{ include (print $.Template.BasePath "/app/project-proxy-nginx-config.yaml") . | sha256sum }}
        checksum/gitea-oauth2-config: {{ include (print $.Template.BasePath "/common/gitea-oauth2-configmap.yaml") . | sha256sum }}
        checksum/gitea-admin-secret: {{ include (print $.Template.BasePath "/common/gitea-admin-secret.yaml") . | sha256sum }}
    spec:
      initContainers:
        - name: gitea-oauth2-setup
          image: "{{ .Values.giteaOauth2Setup.image.repository }}:{{ .Values.giteaOauth2Setup.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: gitea-admin
            - secretRef:
                name: kdl-server-oauth2
            - configMapRef:
                name: gitea-oauth2
            - configMapRef:
                name: kdl-server
        - name: drone-authorizer
          image: {{ .Values.droneAuthorizer.image.repository }}:{{ .Values.droneAuthorizer.image.tag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: DRONE_URL
              valueFrom:
                configMapKeyRef:
                  key: DRONE_URL
                  name: kdl-server
            - name: DRONE_INTERNAL_URL
              valueFrom:
                configMapKeyRef:
                  key: DRONE_INTERNAL_URL
                  name: kdl-server
          envFrom:
            - secretRef:
                name: gitea-admin
      containers:
        - name: kdl-app
          image: {{ .Values.kdlServer.image.repository }}:{{ .Values.kdlServer.image.tag }}
          imagePullPolicy: {{ .Values.kdlServer.image.pullPolicy }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "ssh-keyscan -H gitea >> /app/.ssh/known_hosts"
          env:
            - name: SSH_KNOWN_HOSTS
              value: /app/.ssh/known_hosts
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KDL_SERVER_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.mongodb.connectionString.secretName }}
                  key: {{ .Values.global.mongodb.connectionString.secretKey }}
          envFrom:
            - configMapRef:
                name: kdl-server
            - configMapRef:
                name: gitea-oauth2
            - secretRef:
                name: gitea-admin
            - secretRef:
                name: kdl-server
          volumeMounts:
            - name: kdl-server
              mountPath: /public/config.json
              subPath: config.json
          ports:
            - containerPort: 3000
        - name: oauth2-proxy
          image: {{ .Values.oauth2Proxy.image.repository }}:{{ .Values.oauth2Proxy.image.tag }}
          imagePullPolicy: {{ .Values.oauth2Proxy.image.pullPolicy }}
          args:
            - "--config=/etc/oauth2_proxy.cfg"
            - "--email-domain=*"
            - "--upstream=http://127.0.0.1:8080/"
            - "--upstream=http://127.0.0.1:9000/mlflow/"
            - "--upstream=http://127.0.0.1:9000/filebrowser/"
            - "--upstream=http://127.0.0.1:9000/kg/"
            - "--pass-user-headers=true"
            - "--skip-provider-button=true"
            - "--skip-auth-route=/config.json"
          env:
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: "0.0.0.0:3000"

            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  # app generated secret
                  name: kdl-server-oauth2-credentials
                  key: OAUTH2_CLIENT_ID

            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  # app generated secret
                  name: kdl-server-oauth2-credentials
                  key: OAUTH2_CLIENT_SECRET

          volumeMounts:
            - name: oauth2-config
              mountPath: /etc/oauth2_proxy.cfg
              subPath: oauth2_proxy.cfg
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
        - name: project-proxy
          image: nginx:alpine
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: project-proxy-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
    {{- with .Values.kdlServer.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.kdlServer.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.kdlServer.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: oauth2-config
          configMap:
            name: kdl-server-oauth2-proxy
        - name: kdl-server
          configMap:
            name: kdl-server
        - name: project-proxy-nginx-config
          configMap:
            name: project-proxy-nginx-config
