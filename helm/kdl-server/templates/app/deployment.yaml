apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdl-server
spec:
  selector:
    matchLabels:
      app: kdl-server
  template:
    metadata:
      labels:
        app: kdl-server
      annotations:
        helm.sh/restart-deployment: {{ randAlphaNum 5 | quote }}
    spec:
      initContainers:
        - name: gitea-oauth2-setup
          image: "terminus7/gitea-oauth2-setup:{{ .Values.giteaOauth2Setup.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: gitea-admin-secrets
            - secretRef:
                name: kdl-server-oauth2-secrets
            - configMapRef:
                name: gitea-configmap
            - configMapRef:
                name: kdl-server-configmap
        - name: drone-authorizer
          image: "{{ .Values.droneAuthorizer.image.repository }}:{{ .Values.droneAuthorizer.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: DRONE_URL
              value: {{ include "protocol" . }}://drone.{{ .Values.domain }}
            - name: DRONE_INTERNAL_URL
              valueFrom:
                configMapKeyRef:
                  key: DRONE_INTERNAL_URL
                  name: drone-config
          envFrom:
            - secretRef:
                name: gitea-admin-secrets
      containers:
        - name: kdl-server
          image: {{ .Values.kdlServer.image.repository }}:{{ .Values.kdlServer.image.tag }}
          imagePullPolicy: {{ .Values.kdlServer.image.pullPolicy }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MINIO_URL
              value: {{ include "protocol" . }}://minio.{{ .Values.domain }}
            - name: MINIO_ENDPOINT
              value: {{ .Release.Name }}-minio:9000
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: {{ .Release.Name }}-minio
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: {{ .Release.Name }}-minio
            - name: JUPYTER_URL
              value: {{ include "protocol" . }}://USERNAME-jupyter.{{ .Values.domain }}/lab/workspaces/REPO_FOLDER/tree/repos/REPO_FOLDER
            - name: VSCODE_URL
              value: {{ include "protocol" . }}://USERNAME-code.{{ .Values.domain }}/?folder=/home/coder/repos/REPO_FOLDER
            - name: DRONE_URL
              value: {{ include "protocol" . }}://drone.{{ .Values.domain }}
            - name: MLFLOW_URL
              value: {{ include "protocol" . }}://kdlapp.{{ .Values.domain }}/mlflow/PROJECT_ID/
            - name: KG_URL
              value: kdl-kg:{{ .Values.kdlKG.port }}
            - name: DRONE_INTERNAL_URL
              valueFrom:
                configMapKeyRef:
                  key: DRONE_INTERNAL_URL
                  name: drone-config
            - name: DRONE_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: DRONE_TOKEN
                  name: drone-config
          envFrom:
            - configMapRef:
                name: kdl-server-configmap
            - secretRef:
                name: kdl-server-secrets
            - configMapRef:
                name: gitea-configmap
            - secretRef:
                name: gitea-admin-secrets
            - configMapRef:
                name: dashboard-configmap
          volumeMounts:
            - name: kdl-server-configmap
              mountPath: /public/config.json
              subPath: config.cfg
          ports:
            - containerPort: 3000
        - name: kdl-server-proxy
          image: {{ .Values.oauth2Proxy.image.repository }}:{{ .Values.oauth2Proxy.image.tag }}
          imagePullPolicy: {{ .Values.oauth2Proxy.image.pullPolicy }}
          args:
            - "--config=/etc/oauth2_proxy.cfg"
            - "--email-domain=*"
            - "--upstream=http://127.0.0.1:8080/"
            - "--upstream=http://127.0.0.1:9000/mlflow/"
            - "--pass-user-headers=true"
            - "--skip-provider-button=true"
            - "--skip-auth-route=/config.json"
          env:
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: "0.0.0.0:3000"

            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: kdl-server-oauth2-credentials
                  key: OAUTH2_CLIENT_ID

            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: kdl-server-oauth2-credentials
                  key: OAUTH2_CLIENT_SECRET

          volumeMounts:
            - name: oauth2-config
              mountPath: /etc/oauth2_proxy.cfg
              subPath: oauth2_proxy.cfg
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
        - name: mlflow-proxy
          image: nginx:alpine
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: mlflow-proxy-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: oauth2-config
          configMap:
            name: kdl-server-oauth2-proxy
        - name: kdl-server-configmap
          configMap:
            name: kdl-server-configmap
        - name: mlflow-proxy-nginx-config
          configMap:
            name: mlflow-proxy-nginx-config
