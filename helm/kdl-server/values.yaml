domain: kdl.local

serverName: Local Server

backup:
  enabled: false
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  name: backup-gitea
  image:
    repository: konstellation/kdl-backup
    tag: v0.17.0
    pullPolicy: IfNotPresent

  ## Sets the activeDeadlineSeconds param for the backup cronjob
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/job/#job-termination-and-cleanup
  ##
  activeDeadlineSeconds: 3600

  ## Sets tge backoffLimit param for the backup cronjob
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy
  ##
  backoffLimit: 3

  s3:
    awsAccessKeyID: aws-access-key-id
    awsSecretAccessKey: aws-secret-access-key
    bucketName: s3-bucket-name

  ## Resource requests and limits for backup container
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ##
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"

  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: shared-storage
  #     mountPath: /backup
  #     readOnly: true
  extraVolumes: []
  # extraVolumes:
  #   - name: shared-storage
  #     hostPath:
  #       path: /backup
  #       type: Directory

cleaner:
  enabled: false
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  trashPath: /shared-storage/.trash
  threshold: 5 # minimun age of files to be removed
  image:
    repository: konstellation/cleaner
    tag: v0.13.5
    pullPolicy: IfNotPresent

drone:
  image:
    repository: drone/drone
    tag: 1.10.1
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard
  rpcSecret: runner-shared-secret
  pluginSecret: d97d8ee407af1002fa2449f578bb47a9
  adminToken: 7GSipOV0wJZQioZNBxaw3AotHV1tA4K4
  runnerCapacity: 5
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/proxy-body-size: 100m
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";
      # cert-manager.io/issuer: your-issuer

      ## Define which Nodes the Pods are scheduled on.
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

droneAuthorizer:
  image:
    repository: konstellation/drone-authorizer
    tag: v0.13.5
    pullPolicy: IfNotPresent

droneRunner:
  image:
    repository: drone/drone-runner-kube
    tag: 1.0.0-beta.6
    pullPolicy: IfNotPresent

  ## Service Account to use to run in drone jobs (If you want to use IRSA or Workload Identity)
  ## 
  serviceAccountJob:
    enabled: false
    create: false
    name: drone-runner-job
    #annotations:
    #  eks.amazonaws.com/role-arn: "arn:aws:iam::1234567890:role/myrole"


    ## Define which Nodes the Pods are scheduled on.
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

gitea:
  admin:
    username: "kdladmin"
    password: "123456"
    email: test@test.com
  image:
    repository: gitea/gitea
    tag: 1.14.4
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

      ## Define which Nodes the Pods are scheduled on.
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

giteaOauth2Setup:
  image:
    repository: konstellation/gitea-oauth2-setup
    tag: v0.13.5
    pullPolicy: IfNotPresent

enterprise-gateway:
  image: elyra/enterprise-gateway:2.5.0
  imagePullPolicy: IfNotPresent
  # The primary port on which Enterprise Gateway is servicing requests.
  port: 8888
  replicas: 1
  logLevel: DEBUG
  mirrorWorkingDirs: true

  # create and require a secret token, supplied by client in an "Authorization: token" header
  affinity: {}

  kernel:
    # Kernel cluster role created by this chart.
    clusterRole: kernel-controller
    # Will start kernels in the same namespace as EG if True.
    shareGatewayNamespace: true
    # ignored if shareGatewayNamespace
    # kernelNamespace: jupyter-notebooks
    # Timeout for kernel launching in seconds.
    launchTimeout: 60
    # Timeout for an idle kernel before its culled in seconds. Default is 1 hour.
    cullIdleTimeout: 3600
    # List of kernel names that are available for use.
    whitelist:
      - kdl-py3.9
      - kdl-py3.9-cuda10.2-cudnn7
      - kdl-py3.9-cuda11.6-cudnn8
    # Default kernel name should be something from the whitelist
    defaultKernelName: kdl-py3.9
    # kernel service account name
    serviceAccount: kernel-sa

  kernelspecs:
    # Optional custom data image containing kernelspecs to use.
    image: "konstellation/jupyter-kernelspecs:1.1.0"
    # Kernelspecs image pull policy.
    imagePullPolicy: IfNotPresent

  # Kernel Image Puller (daemonset)
  kip:
    enabled: true
    # Kernel Image Puller image name and tag to use.
    image: elyra/kernel-image-puller:2.5.0
    # Kernel Image Puller image pull policy.
    imagePullPolicy: IfNotPresent
    # Determines whether the Kernel Image Puller will pull kernel images it has
    # previously pulled
    pullPolicy: Always
    # The interval (in seconds) at which the Kernel Image Puller fetches
    # kernelspecs to pull kernel images.
    interval: 300

knowledgeGalaxy:
  enabled: false
  image:
    repository: konstellation/knowledge-galaxy
    tag: v1.2.1
    pullPolicy: IfNotPresent

  ## Knowledge Galaxy app config
  ##
  config: {}
  #  logLevel: "INFO"
  #  workers: 1
  #  numberOfOutputs: 1000
  #  descriptionMinWords: 50

  ## Service account for Knowledge Galaxy to use.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceaccount:
    enabled: true
    name: ""
    annotations: {}

    ## Reference to one or more secrets to be used when pulling images
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    imagePullSecrets: []
    # - name: regcred

    ## Define which Nodes the Pods are scheduled on.
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

kdlServer:
  image:
    repository: konstellation/kdl-server
    tag: 1.19.0
    pullPolicy: IfNotPresent
  ingress:
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"

      ## Large values are needed here to serve big files from Filebrowser
      ##
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      # cert-manager.io/issuer: your-issuer

      ## Define which Nodes the Pods are scheduled on.
      ## ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

minio:
  resources:
    requests:
      memory: 1Gi
  mode: standalone
  rootUser: "minio"
  rootPassword: "minio123"
  serviceAccount:
    create: false
  persistence:
    storageClass: standard
    existingClaim: received-data-claim
    accessMode: ReadWriteMany

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## This Chart uses custom ingresses for MinIO and MinIO Console and not
  ## the ones implemented by the official MinIO Chart which are disabled by default
  ##
  ingress:
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"

  consoleIngress:
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"

mongodb:
  auth:
    adminUser: "admin"
    adminPassword: "123456"
  persistentVolume:
    storageClassName: standard
    size: 5Gi
  host: "kdl-mongo-0"
  port: 27017

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

oauth2Proxy:
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: v7.0.1-amd64
    pullPolicy: IfNotPresent

postgres:
  image:
    repository: postgres
    tag: 12.1
    pullPolicy: IfNotPresent
  dbName: gitea
  dbPassword: test
  storage:
    size: 10Gi
    storageClassName: standard

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

projectOperator:
  ## Main container specs
  ##
  manager:
    image:
      repository: konstellation/project-operator
      tag: v0.13.5
      pullPolicy: IfNotPresent

    ## Resource requests and limits for primary projectOperator container
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 200Mi
    # requests:
    #   cpu: 100m
    #   memory: 60Mi

    ## kube-rbac-proxy container specs
    ##
  kubeRbacProxy:
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.8.0
      pullPolicy: IfNotPresent

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## The following components are managed by the manager container when kdlproject custom resources are detected
  ##
  mlflow:
    image:
      repository: konstellation/mlflow
      tag: v0.13.5
      pullPolicy: IfNotPresent
    volume:
      storageClassName: standard
      size: 1Gi
  filebrowser:
    image:
      repository: filebrowser/filebrowser
      tag: v2
      pullPolicy: IfNotPresent

sharedVolume:
  name: received-data
  storageClassName: standard
  size: 10Gi

## TLS configuration for Ingresses, Gitea and Drone.
## If tls.certManager.enabled=true, Cert Manager
## certificates will be used.
##
## Alternatively a tls secret can be used. In that
## case the secret must be manually created in the namespace
##
tls:
  enabled: true
  certManager:
    enabled: false
    acme:
      server: https://acme-v02.api.letsencrypt.org/directory
      email: user@email.com
  ## Custom TLS secret
  ## Must be a valid wildcard certificate for the domain
  ## declared in .Values.domain
  ## Certificate name example:
  ##   *.example.com
  #
  # secretName: kdl-server-tls

  ## A secret containing the the CA cert is needed
  ## in order to use a self-signed certificate
  ##
  # caSecret:
  #   name: kdl-ca-cert
  #   certFilename: ca.crt

userToolsOperator:
  image:
    repository: konstellation/user-tools-operator
    tag: 0.21.0
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard

  ## Define which Nodes the Pods are scheduled on.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Assign custom affinity rules
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  affinity: {}

  ## If specified, the pod's tolerations.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## The following components are managed by the manager container when `usertool` custom resources are detected
  ##
  jupyter:
    image:
      repository: konstellation/jupyter-gpu
      tag: v0.15.0
      pullPolicy: IfNotPresent
  repoCloner:
    image:
      repository: konstellation/repo-cloner
      tag: 0.15.0
      pullPolicy: IfNotPresent
  vscode:
    image:
      repository: konstellation/vscode
      tag: v0.15.0
      pullPolicy: IfNotPresent
  vscodeRuntime:
    image:
      repository: konstellation/kdl-py
      tag: "3.9"
      pullPolicy: IfNotPresent

  ## Default ingress config for all deployed User Tools.
  ##
  ## This Chart has been developed using Nginx Ingress Controller by default.
  ## Using the following default annotations ensures its correct operation.
  ## Ref: https://kubernetes.github.io/ingress-nginx/
  ##
  ingress:
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

      ## If enabled, users will be able to download a kubeconfig file, so they can attach an external terminal/IDE to
      ## the vscodeRuntime running inside KST.
  kubeconfig:
    enabled: false
    ## External cluster address to be able to connect to it from the outside.
    # enabled: true
    # externalServerUrl: https://192.168.0.21:16443

  oauth2Proxy:
    image:
      repository: quay.io/oauth2-proxy/oauth2-proxy
      tag: v7.0.1-amd64
      pullPolicy: IfNotPresent
