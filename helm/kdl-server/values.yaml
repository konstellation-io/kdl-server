global:
  # -- KDL Server instance name
  serverName: "local-server"
  # -- The DNS domain name that will serve the application
  domain: kdl.local
  ingress:
    tls:
      # -- Whether to enable TLS
      enabled: true
      # -- The name of the TLS secret to use for all ingresses. Specific component ingress secret names take precedence over this.
      # @default -- If not defined, for each chart component that uses an ingress, an autogenerated secret name based on the `.Values.global.domain` and the component name will be used. Example: for gitea `kdl.local-gitea-tls` will be used
      secretName: null

      # -- A secret containing the the CA cert is needed in order to use a self-signed certificate. Check [values.yaml](./values.yaml) for usage details.
      caSecret: {}
      # caSecret:
      #   name: kdl-ca-cert
      #   certFilename: ca.crt
  mongodb:
    connectionString:
      # -- The name of the secret that contains a key with the MongoDB connection string.
      secretName: ""
      # -- The name of the secret key that contains the MongoDB connection string.
      secretKey: ""

backup:
  # -- Whether to enable backup
  enabled: false
  # -- Backup cronjob schedule
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  # -- Name of the backup cronjob
  name: backup-gitea
  image:
    # -- Image repository
    repository: konstellation/kdl-backup
    # -- Image tag
    tag: 0.23.0
    # -- Image pull policy
    pullPolicy: IfNotPresent

  # -- Sets the activeDeadlineSeconds param for the backup cronjob. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/job/#job-termination-and-cleanup
  activeDeadlineSeconds: 3600

  # -- Sets tge backoffLimit param for the backup cronjob. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy
  backoffLimit: 3

  s3:
    # -- AWS Access Key ID for acceding backup bucket
    awsAccessKeyID: aws-access-key-id
    # -- AWS Secret Access Key for acceding backup bucket
    awsSecretAccessKey: aws-secret-access-key
    # -- The S3 bucket that will store all backups
    bucketName: s3-bucket-name

  # -- Resource requests and limits for backup container. Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"

  # -- Extra volume mounts for backup pods
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: shared-storage
  #     mountPath: /backup
  #     readOnly: true

  # -- Extra volumes for backup pods
  extraVolumes: []
  # extraVolumes:
  #   - name: shared-storage
  #     hostPath:
  #       path: /backup
  #       type: Directory

cleaner:
  # -- Whether to enable cleaner cronjob
  enabled: false
  # -- Celaner cronjob schedule
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  # -- The name of the trash path
  trashPath: /shared-storage/.trash
  # -- The minimun age of files to be removed
  threshold: 5 # minimun age of files to be removed
  image:
    # -- The image repository
    repository: konstellation/cleaner
    # -- The image tag
    tag: 0.15.0
    # -- The image pull policy
    pullPolicy: IfNotPresent

drone:
  image:
    # -- The image repository
    repository: drone/drone
    # -- The image tag
    tag: 1.10.1
    # -- The image pull policy
    pullPolicy: IfNotPresent
  storage:
    # -- Storage size
    size: 10Gi
    # -- The Storage ClassName
    storageClassName: standard
  # -- Drone RPC secret for allowing Drone runners to authentiticate the RPC connection to the server
  rpcSecret: runner-shared-secret
  # -- Drone Server admin token
  adminToken: 7GSipOV0wJZQioZNBxaw3AotHV1tA4K4
  # -- The max number of concurrent jobs that a Drone runner can run
  runnerCapacity: 5
  ingress:
    # -- The ingress class name
    className: "nginx"
    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # nginx.ingress.kubernetes.io/proxy-body-size: 100m
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";
      # cert-manager.io/issuer: your-issuer

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

droneAuthorizer:
  image:
    # -- The image repository
    repository: konstellation/drone-authorizer
    # -- The image tag
    tag: v0.13.5
    # -- The image pull policy
    pullPolicy: IfNotPresent

droneRunner:
  image:
    # -- The image repository
    repository: drone/drone-runner-kube
    # -- The image tag
    tag: 1.0.0-beta.6
    # -- The image pull policy
    pullPolicy: IfNotPresent

  # -- Sets DRONE_DEBUG environment variable
  debug: "true"
  # -- Sets DRONE_TRACE environment variable
  trace: "true"

  # -- Provides the secret token used to authenticate http requests to the Kubernetes Secrets Extension endpoint
  pluginSecret: "my-secret"

  # -- Configures the DRONE_RUNNER_ENVIRON environment variable. Ref: https://docs.drone.io/runner/kubernetes/configuration/reference/drone-runner-environ/
  droneRunnerEnviron: ""
  # droneRunnerEnviron: "GIT_SSL_NO_VERIFY:true"

  ## Service Account to use to run in drone jobs (If you want to use IRSA or Workload Identity)
  ##
  serviceAccountJob:
    # -- Whether to enable the service account for Drone job pods
    enabled: false
    # -- If `.Values.droneRunner.serviceAccountJob.enabled` is set to `true`, creates the service account
    create: false
    # -- The name of the Drone job service account
    name: drone-runner-job
    # -- If `.Values.droneRunner.serviceAccountJob.create` is set to `true`, sets annotations to the service account
    annotations: {}
    #  eks.amazonaws.com/role-arn: "arn:aws:iam::1234567890:role/myrole"

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

gitea:
  admin:
    # -- Admin username
    username: "kdladmin"
    # -- Admin password
    password: "123456"
    # -- Admin user email
    email: test@test.com
  image:
    # -- The image repository
    repository: gitea/gitea
    # -- The image tag
    tag: 1.14.4
    # -- The image pull policy
    pullPolicy: IfNotPresent
  storage:
    # -- Storage size
    size: 10Gi
    # -- Storage class name
    storageClassName: standard
  ingress:
    # -- The ingress class name
    className: "nginx"

    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

giteaOauth2Setup:
  image:
    # -- The image repository
    repository: konstellation/gitea-oauth2-setup
    # -- The image tag
    tag: 0.16.0
    # -- The image pull policy
    pullPolicy: IfNotPresent

knowledgeGalaxy:
  # -- Whether to enable Knowledge Galaxy
  enabled: false
  image:
    # -- The image repository
    repository: konstellation/knowledge-galaxy
    # -- The image tag
    tag: v1.2.1
    # -- The image pull policy
    pullPolicy: IfNotPresent
  config:
    # -- Log level
    logLevel: "INFO"
    # -- Number of threads for the server
    workers: 1
    # -- Number of outputs that the recommender returns
    numberOfOutputs: 1000
    # -- Minimum number of words to use for project description
    descriptionMinWords: 50

  ## Service account for Knowledge Galaxy to use.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceaccount:
    # -- Whether to create a service account
    enabled: true
    # -- The name of the service account to use
    # @default -- knowledge-galaxy
    name: ""
    # -- The service account annotations
    annotations: {}

    # -- Reference to one or more secrets to be used when pulling images. Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    imagePullSecrets: []
    # - name: regcred

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

kdlServer:
  image:
    # -- The image repository
    repository: konstellation/kdl-server
    # -- The image tag
    tag: 1.29.0
    # -- The image pull policy
    pullPolicy: IfNotPresent
  ingress:
    # -- The ingress class name
    className: "nginx"
    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      ## This Chart has been developed using Nginx Ingress Controller by default.
      ## Using the following default annotations ensures its correct operation.
      ## Ref: https://kubernetes.github.io/ingress-nginx/
      ##
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"

      ## Large values are needed here to serve big files from Filebrowser
      ##
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      ## If additional annotations are needed to configure it, provide an additional
      ## file ensuring they are appended to the default ones.
      ##
      ## Example:
      ##
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      # cert-manager.io/issuer: your-issuer

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

# -- MinIO chart's values. Check MinIO chart's [documentation](https://github.com/minio/minio/tree/master/helm/minio) for more info about values
# @default -- Check [values.yaml](./values.yaml)
minio:
  resources:
    requests:
      memory: 1Gi
  mode: standalone
  rootUser: "minio"
  rootPassword: "minio123"
  serviceAccount:
    create: false
  persistence:
    storageClass: standard
    existingClaim: received-data-claim
    accessMode: ReadWriteMany

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## This Chart uses custom ingresses for MinIO and MinIO Console and not
  ## the ones implemented by the official MinIO Chart which are disabled by default
  ##
  ingress:
    # -- The ingress class name
    className: "nginx"
    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"

  consoleIngress:
    # The ingress class name
    className: "nginx"
    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"

oauth2Proxy:
  image:
    # -- The image repository
    repository: quay.io/oauth2-proxy/oauth2-proxy
    # -- The image tag
    tag: v7.0.1-amd64
    # -- The image pull policy
    pullPolicy: IfNotPresent
  config:
    # -- The seed string for secure cookies. Ref: https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview
    cookieSecret: "mycookiesecret16"

postgres:
  image:
    # -- The image repository
    repository: postgres
    # -- The image tag
    tag: 12.1
    # -- The image pull policy
    pullPolicy: IfNotPresent
  # -- The name of the Postgres database for Gitea
  dbName: gitea
  # -- The password for the Gitea's database
  dbPassword: test
  storage:
    # -- The storage size for the persistent volume claim
    size: 10Gi
    # -- Storage class to use for persistence
    storageClassName: standard

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

projectOperator:
  ## Main container specs
  ##
  manager:
    image:
      # -- The image repository
      repository: konstellation/project-operator
      # -- The image tag
      tag: 0.19.0
      # -- The image pull policy
      pullPolicy: IfNotPresent

    # -- Resource requests and limits for primary projectOperator container. Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 200Mi
    # requests:
    #   cpu: 100m
    #   memory: 60Mi

    ## kube-rbac-proxy container specs
    ##
  kubeRbacProxy:
    image:
      # -- Image repository
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      # -- Image tag
      tag: v0.8.0
      # -- Image pull policy
      pullPolicy: IfNotPresent

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## The following components are managed by the manager container when kdlproject custom resources are detected
  ##
  mlflow:
    image:
      # -- The image repository
      repository: konstellation/mlflow
      # -- The image tag
      tag: v0.13.5
      # -- The image pull policy
      pullPolicy: IfNotPresent
    volume:
      # -- Storage class to use for persistence
      storageClassName: standard
      # -- The storage size for the persistent volume claim
      size: 1Gi
    ingress:
      tls:
        # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
        secretName: null
      # -- The ingress class name
      className: "nginx"
      # -- Ingress annotations
      annotations: {}

    # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity: {}

    # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

  filebrowser:
    image:
      # -- The image repository
      repository: filebrowser/filebrowser
      # -- The image tag
      tag: v2
      # -- The image pull policy
      pullPolicy: IfNotPresent

    # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: {}

    # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity: {}

    # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

sharedVolume:
  # -- The name of the shared volume
  name: received-data
  # -- Storage class to use for persistence
  storageClassName: standard
  # -- The storage size for the persistent volume claim
  size: 10Gi

userToolsOperator:
  image:
    # -- The image repository
    repository: konstellation/user-tools-operator
    # -- The image tag
    tag: 0.26.0
    # -- The image pull policy
    pullPolicy: IfNotPresent
  storage:
    # -- The storage size for the persistent volume claim
    size: 10Gi
    # -- Storage class to use for persistence
    storageClassName: standard

  # -- Define which Nodes the Pods are scheduled on. Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Assign custom affinity rules. Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}

  # -- If specified, the pod's tolerations. Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## The following components are managed by the manager container when `usertool` custom resources are detected
  ##
  repoCloner:
    image:
      # -- The image repository
      repository: konstellation/repo-cloner
      # -- The image tag
      tag: 0.15.0
      # -- The image pull policy
      pullPolicy: IfNotPresent
  vscode:
    image:
      # -- The image repository
      repository: konstellation/vscode
      # -- The image tag
      tag: v0.15.0
      # -- The image pull policy
      pullPolicy: IfNotPresent
  vscodeRuntime:
    image:
      # -- The image repository
      repository: konstellation/kdl-py
      # -- The image tag
      tag: "3.9"
      # -- The image pull policy
      pullPolicy: IfNotPresent

  ## Default ingress config for all deployed User Tools.
  ##
  ## This Chart has been developed using Nginx Ingress Controller by default.
  ## Using the following default annotations ensures its correct operation.
  ## Ref: https://kubernetes.github.io/ingress-nginx/
  ##
  ingress:
    # -- The ingress class name
    className: "nginx"
    tls:
      # -- The TLS secret name that will be used. It takes precedence over `.Values.global.ingress.tls.secretName`.
      secretName: null
    # -- Ingress annotations
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: frame-ancestors 'self' *";
      ## In case of additional security to be required set the previous annotation as follows
      ##
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #   more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://kdlapp.kdl.local";

      ## If enabled, users will be able to download a kubeconfig file, so they can attach an external terminal/IDE to
      ## the vscodeRuntime running inside KST.
  kubeconfig:
    # -- Whether to enable kubeconfig for using with VSCode remote development. Ref: https://code.visualstudio.com/docs/remote/remote-overview
    enabled: false
    # -- The Kube API Server URL for using with VSCode remote development
    externalServerUrl: ""
    ## Example:
    ##
    # enabled: true
    # externalServerUrl: https://192.168.0.21:16443

  oauth2Proxy:
    image:
      # -- The image repository
      repository: quay.io/oauth2-proxy/oauth2-proxy
      # -- The image tag
      tag: v7.0.1-amd64
      # -- The image pull policy
      pullPolicy: IfNotPresent
