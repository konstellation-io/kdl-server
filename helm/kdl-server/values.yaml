domain: kdl.local

serverName: Local Server

backup:
  enabled: false
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  name: backup-gitea
  image:
    repository: konstellation/kdl-backup
    tag: v0.17.0
    pullPolicy: IfNotPresent
  s3:
    awsAccessKeyID: aws-access-key-id
    awsSecretAccessKey: aws-secret-access-key
    bucketName: s3-bucket-name
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: shared-storage
  #     mountPath: /backup
  #     readOnly: true
  extraVolumes: []
  # extraVolumes:
  #   - name: shared-storage
  #     hostPath:
  #       path: /backup
  #       type: Directory

cleaner:
  enabled: false
  schedule: "0 1 * * 0" # every sunday at 1:00 AM
  trashPath: /shared-storage/.trash
  threshold: 5 # minimun age of files to be removed
  image:
    repository: konstellation/cleaner
    tag: latest
    pullPolicy: IfNotPresent

drone:
  image:
    repository: drone/drone
    tag: 1.10.1
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard
  rpcSecret: runner-shared-secret
  pluginSecret: d97d8ee407af1002fa2449f578bb47a9
  adminToken: 7GSipOV0wJZQioZNBxaw3AotHV1tA4K4
  runnerCapacity: 5

droneAuthorizer:
  image:
    repository: konstellation/drone-authorizer
    tag: latest
    pullPolicy: IfNotPresent

droneRunner:
  image:
    repository: drone/drone-runner-kube
    tag: 1.0.0-beta.6
    pullPolicy: IfNotPresent

gitea:
  admin:
    username: "kdladmin"
    password: "123456"
    email: test@test.com
  image:
    repository: gitea/gitea
    tag: 1.14.4
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard

giteaOauth2Setup:
  image:
    repository: konstellation/gitea-oauth2-setup
    tag: latest
    pullPolicy: IfNotPresent

ingress:
  type: nginx

knowledgeGalaxy:
  enabled: false
  image:
    repository: konstellation/knowledge-galaxy
    tag: v1.2.1
    pullPolicy: IfNotPresent

  ## Knowledge Galaxy app config
  ##
  config: {}
  #  logLevel: "INFO"
  #  workers: 1
  #  numberOfOutputs: 1000
  #  descriptionMinWords: 50

  ## Service account for Knowledge Galaxy to use.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceaccount:
    enabled: true
    name: ""
    annotations: {}

    ## Reference to one or more secrets to be used when pulling images
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    imagePullSecrets: []
    # - name: regcred

kdlServer:
  image:
    repository: konstellation/kdl-server
    tag: v0.18.0
    pullPolicy: IfNotPresent
  ingress:
    proxyReadTimeout: "3600"
    proxySendTimeout: "3600"
    proxyConnectTimeout: "3600"

    ## Large values are needed to serve big files from Filebrowser
    ##
    proxyBodySize: "1000000m"

minio:
  resources:
    requests:
      memory: 1Gi
  mode: standalone
  rootUser: "minio"
  rootPassword: "minio123"
  serviceAccount:
    create: false
  persistence:
    storageClass: standard
    existingClaim: received-data-claim
    accessMode: ReadWriteMany

  ## This Chart feature is disabled because we have to deal with different Kubernetes API versions.
  ## Please check the ingress template in Helm chart
  ##
  ingress:
    enabled: false
    hosts:
      - minio.local
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "1000000m"

mongodb:
  auth:
    adminUser: "admin"
    adminPassword: "123456"
  persistentVolume:
    storageClassName: standard
    size: 5Gi
  host: "kdl-mongo-0"
  port: 27017

oauth2Proxy:
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: v7.0.1-amd64
    pullPolicy: IfNotPresent

postgres:
  image:
    repository: postgres
    tag: 12.1
    pullPolicy: IfNotPresent
  dbName: gitea
  dbPassword: test
  storage:
    size: 10Gi
    storageClassName: standard

projectOperator:
  ## Main container specs
  ##
  manager:
    image:
      repository: konstellation/project-operator
      tag: latest
      pullPolicy: IfNotPresent

    ## Resource requests and limits for primary projectOperator container
    ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 200Mi
    # requests:
    #   cpu: 100m
    #   memory: 60Mi

    ## kube-rbac-proxy container specs
    ##
  kubeRbacProxy:
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.8.0
      pullPolicy: IfNotPresent

  ## The following components are managed by the manager container when kdlproject custom resources are detected
  ##
  mlflow:
    image:
      repository: konstellation/mlflow
      tag: latest
      pullPolicy: IfNotPresent
    volume:
      storageClassName: standard
      size: 1Gi
  filebrowser:
    image:
      repository: filebrowser/filebrowser
      tag: v2
      pullPolicy: IfNotPresent

sharedVolume:
  name: received-data
  storageClassName: standard
  size: 10Gi

## TLS configuration for Ingresses, Gitea and Drone.
## If tls.certManager.enabled=true, Cert Manager
## certificates will be used.
##
## Alternatively a tls secret can be used. In that
## case the secret must be manually created in the namespace
##
tls:
  enabled: true
  certManager:
    enabled: false
    acme:
      server: https://acme-v02.api.letsencrypt.org/directory
      email: user@email.com
  ## Custom TLS secret
  ## Must be a valid wildcard certificate for the domain
  ## declared in .Values.domain
  ## Certificate name example:
  ##   *.example.com
  #
  # secretName: kdl-server-tls

  ## A secret containing the the CA cert is needed
  ## in order to use a self-signed certificate
  ##
  # caSecret:
  #   name: kdl-ca-cert
  #   certFilename: ca.crt

userToolsOperator:
  image:
    repository: konstellation/user-tools-operator
    tag: "latest"
    pullPolicy: IfNotPresent
  storage:
    size: 10Gi
    storageClassName: standard
  jupyter:
    image:
      repository: konstellation/jupyter-gpu
      tag: "latest"
      pullPolicy: IfNotPresent
  repoCloner:
    image:
      repository: konstellation/repo-cloner
      tag: "latest"
      pullPolicy: IfNotPresent
  vscode:
    image:
      repository: konstellation/vscode
      tag: "latest"
      pullPolicy: IfNotPresent
  #giteaOauth2Setup:
  #  image:
  #    repository: konstellation/gitea-oauth2-setup
  #    tag: "latest"
  #    pullPolicy: IfNotPresent
  oauth2Proxy:
    image:
      repository: quay.io/oauth2-proxy/oauth2-proxy
      tag: v7.0.1-amd64
      pullPolicy: IfNotPresent
