{{- if .Values.filebrowser.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.projectId }}-filebrowser-config
  labels:
    {{- include "kdl-project.filebrowserLabels" . | nindent 4 }}
data:
  entrypoint.sh: |
    #!/bin/sh
    set -e

    if [ -n "$AWS_S3_BUCKET" ]; then
        echo "Mounting S3 bucket..."

        # minio authentication
        if [ -n "$AWS_S3_ACCESS_KEY_ID" ] && [ -n "$AWS_S3_SECRET_ACCESS_KEY" ]; then
            echo "$AWS_S3_ACCESS_KEY_ID:$AWS_S3_SECRET_ACCESS_KEY" > $HOME/passwd-s3fs
            chmod 600 $HOME/passwd-s3fs
        fi

        # bucket with basic options
        s3fs "$AWS_S3_BUCKET" "$AWS_S3_MOUNT" \
            -o passwd_file=$HOME/passwd-s3fs \
            -o url="$AWS_S3_URL" \
            -o allow_other \
            $S3FS_ARGS

        # wait until mount to be ready
        while ! mountpoint -q "$AWS_S3_MOUNT"; do
            echo "Waiting for S3 mount to be ready..."
            sleep 1
        done
        echo "S3 mount completed"
    fi

    # filebrowser configuration
    echo "Initializing Filebrowser..."
    /filebrowser config init
    /filebrowser config set --auth.method=noauth

    # KDL admin user
    echo "Configuring KDL admin user..."
    /filebrowser users add kdladmin not_used_pass \
        --perm.admin=false   \
        --perm.download=true \
        --perm.create=false  \
        --perm.delete=false  \
        --perm.execute=false \
        --perm.modify=false  \
        --perm.rename=false  \
        --perm.share=false   \
        --lockPassword=true

    # filebrowser
    echo "Starting Filebrowser..."
    exec /filebrowser
{{- end }}
