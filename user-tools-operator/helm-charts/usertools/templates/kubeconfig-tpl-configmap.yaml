apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeconfig-{{ .Values.usernameSlug }}-tpl-configmap
  labels:
    app: kubeconfig-{{ .Values.usernameSlug }}-tpl-configmap
data:

  generate-kubeconfig.sh: |+
    #!/bin/sh

    echo "Kubeconfig enabled {{ .Values.kubeconfig.enabled }}"

    if [ "{{ .Values.kubeconfig.enabled }}" = "false" ]; then
      echo "Kubeconfig configuration is disabled. Exit without generatig the file."
      exit 0
    fi

    INTERNAL_URL=https://kubernetes.default.svc
    CACERT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt | base64 | tr -d '\n')
    TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    KUBECONFIG_DIR=/home/coder/.kube

    replace_template() {
      FILE=$1
      SERVER=$2

      cp /kubeconfig.tpl ${FILE}
      sed -i "s|{CACERT}|${CACERT}|g" ${FILE}
      sed -i "s|{TOKEN}|${TOKEN}|g" ${FILE}
      sed -i "s|{SERVER}|${SERVER}|g" ${FILE}
    }

    mkdir -p ${KUBECONFIG_DIR}
    replace_template ${KUBECONFIG_DIR}/config ${INTERNAL_URL}
    chown -R 1000:1000 ${KUBECONFIG_DIR}

  kubeconfig.tpl: |+
    apiVersion: v1
    clusters:
    - cluster:
        certificate-authority-data: {CACERT}
        server: {SERVER}
      name: konstellation
    contexts:
    - context:
        cluster: konstellation
        user: coder
        namespace: {{ .Release.Namespace }}
      name: default
    current-context: default
    kind: Config
    preferences: {}
    users:
    - name: coder
      user:
        token: {TOKEN}
